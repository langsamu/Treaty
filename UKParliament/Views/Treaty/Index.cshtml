@model UKParliament.Model.UKParliamentDynamicGraph
@{
    ViewData["Title"] = @Localizer["Title"];
}

<div class="section--primary">
    <div class="container">
        <small><a asp-controller="Procedure" asp-action="Index">@Localizer["Category"]</a></small>
        <h1><span>@Localizer["Title"]</span></h1>
        <p>@Localizer["Abstract"] Number of treaties: @Model.Treaties.Count()</p>
    </div>
</div>

<section id="content">
    <div class="container">
        <ol class="list--block">
            @foreach (var treaty in Model.Treaties.OrderByDescending(x => x.LaidThingHasLaying.FirstOrDefault()?.LayingDate))
            {
                <li>
                    <div class="card">
                        <div class="card__details">
                            <h2>
                                <a asp-controller="Treaty" asp-action="Item" asp-route-id="@treaty.Id">@treaty.LaidThingName</a>
                            </h2>
                            <dl>
                                <dt>Lead government organisation</dt>
                                <dd>@treaty.TreatyHasLeadGovernmentOrganisation.GroupName</dd>
                                @foreach (var laying in @treaty.LaidThingHasLaying)
                                {
                                    <dt>Laying date</dt>
                                    <dd>@laying.LayingDate.ToString("dddd, dd MMMM yyyy")</dd>
                                    <dt>Laying body</dt>
                                    <dd>@laying.LayingHasLayingBody.GroupName</dd>
                                    @foreach (var procedureStep in @laying.BusinessItemHasProcedureStep)
                                    {
                                        @foreach (var house in @procedureStep.ProcedureStepHasHouse)
                                        {
                                            <dt>Procedure step has house</dt>
                                            <dd>@house.HouseName</dd>
                                        }
                                    }
                                }
                                <dt>Procedure</dt>
                                <dd>@treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasProcedure.ProcedureName</dd>
                            </dl>
                            <ul>
                                @foreach (var businessItem in @treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem.OrderBy(x => x.BusinessItemDate.FirstOrDefault()))
                                {
                                    @foreach (var procedureStep in @businessItem.BusinessItemHasProcedureStep)
                                    {
                                <li>@businessItem.BusinessItemDate.FirstOrDefault().ToString("dddd, dd MMMM yyyy") - @procedureStep.ProcedureStepName - @procedureStep.ProcedureStepHasHouse.FirstOrDefault()?.HouseName - @businessItem.BusinessItemHasBusinessItemWebLink.FirstOrDefault()</li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </li>
            }
        </ol>
    </div>
</section>
